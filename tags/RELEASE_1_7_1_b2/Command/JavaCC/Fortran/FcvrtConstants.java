/* Generated By:JavaCC: Do not edit this line. FcvrtConstants.java */
/*
 * File:  Fcvrt.java 
 *             
 * Copyright (C) 2004, Ruth Mikkelson
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307, USA.
 *
 * Contact : Ruth Mikkelson <mikkelsonr@uwstout.edu>
 *           Department of Mathematics, Statistics and Computer Science
 *           University of Wisconsin-Stout
 *           Menomonie, WI 54751, USA
 *
 * This work was supported by the Intense Pulsed Neutron Source Division
 * of Argonne National Laboratory, Argonne, IL 60439-4845, USA.
 * This work was supported by the National Science Foundation under
 * grant number DMR-0218882
 *
 * For further information, see <http://www.pns.anl.gov/ISAW/>
 *
 * This java file was created from the file FortJ2.jj using JavaCC. See header
 * for information
 * Modified:
 *
 * $Log$
 * Revision 1.1  2004/06/04 22:42:56  rmikk
 * Initial Checkin so FortranTokenManager will compile
 *
 */

 package Command.JavaCC.Fortran;

public interface FcvrtConstants {

  int EOF = 0;
  int COMMENT = 1;
  int EOLN = 2;
  int LABEL = 3;
  int SUBROUTINE = 4;
  int FUNCTION = 5;
  int INTEGER = 6;
  int REAL = 7;
  int CHARACTER = 8;
  int LOGICAL = 9;
  int EXTERNAL = 10;
  int DIMENSION = 11;
  int CONTINUE = 12;
  int ELSE = 13;
  int ENDIF = 14;
  int IF = 15;
  int ELSEIF = 16;
  int DO = 17;
  int CALL = 18;
  int END = 19;
  int RETURN = 20;
  int IDENTIFIER = 21;
  int EQUALS = 22;
  int COMMA = 23;
  int THEN = 24;
  int INTNUM = 25;
  int LPAREN = 26;
  int RPAREN = 27;
  int LOGDOT = 28;
  int NOT = 29;
  int DOT = 30;
  int AND = 31;
  int OR = 32;
  int NE = 33;
  int EQ = 34;
  int LT = 35;
  int LE = 36;
  int GT = 37;
  int GE = 38;
  int PLUS = 39;
  int MINUS = 40;
  int PROD = 41;
  int DIVISION = 42;
  int POWER = 43;
  int STRING = 44;
  int EXP = 45;
  int MATHOP = 46;
  int FLOATNUM = 47;
  int ERROR = 48;
  int WRITE = 49;
  int READ = 50;
  int WHILE = 51;
  int TRUE = 52;
  int FALSE = 53;

  String[] tokenImage = {
    "<EOF>",
    "<COMMENT>",
    "<EOLN>",
    "<LABEL>",
    "<SUBROUTINE>",
    "<FUNCTION>",
    "<INTEGER>",
    "<REAL>",
    "<CHARACTER>",
    "<LOGICAL>",
    "<EXTERNAL>",
    "<DIMENSION>",
    "<CONTINUE>",
    "<ELSE>",
    "<ENDIF>",
    "<IF>",
    "<ELSEIF>",
    "<DO>",
    "<CALL>",
    "<END>",
    "<RETURN>",
    "<IDENTIFIER>",
    "<EQUALS>",
    "<COMMA>",
    "<THEN>",
    "<INTNUM>",
    "<LPAREN>",
    "<RPAREN>",
    "<LOGDOT>",
    "<NOT>",
    "<DOT>",
    "<AND>",
    "<OR>",
    "<NE>",
    "<EQ>",
    "<LT>",
    "<LE>",
    "<GT>",
    "<GE>",
    "<PLUS>",
    "<MINUS>",
    "<PROD>",
    "<DIVISION>",
    "<POWER>",
    "<STRING>",
    "<EXP>",
    "<MATHOP>",
    "<FLOATNUM>",
    "<ERROR>",
    "<WRITE>",
    "<READ>",
    "<WHILE>",
    "<TRUE>",
    "<FALSE>",
  };

}
