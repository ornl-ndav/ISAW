/*
 * File: IViewComponent2D.java
 *
 * Copyright (C) 2003, Mike Miller
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307, USA.
 *
 * Primary   Mike Miller <millermi@uwstout.edu>
 * Contact:  Student Developer, University of Wisconsin-Stout
 *           
 * Contact : Dennis Mikkelson <mikkelsond@uwstout.edu>
 *           Department of Mathematics, Statistics and Computer Science
 *           University of Wisconsin-Stout
 *           Menomonie, WI 54751, USA
 *
 * This work was supported by the National Science Foundation under grant
 * number DMR-0218882, and by the Intense Pulsed Neutron Source Division
 * of Argonne National Laboratory, Argonne, IL 60439-4845, USA.
 *
 * For further information, see <http://www.pns.anl.gov/ISAW/>
 *
 * Modified:
 *
 *  $Log$
 *  Revision 1.5  2003/10/16 16:01:26  millermi
 *  - Added method getPointedAt() to get the current point.
 *
 *  Revision 1.4  2003/08/11 23:44:24  millermi
 *  - Changed getSelectedSet() to getSelectedRegions() which now
 *    returns an array of Regions.
 *  - Changed setSelectedSet() to setSelectedRegions() which now
 *    takes parameter of type Region.
 *
 *  Revision 1.3  2003/05/22 13:04:56  dennis
 *  Added method to get the display panel.  Changed to pass ViewMenuItems
 *  rather than JMenuItems to be placed in Menu bar. (Mike Miller)
 *
 *  Revision 1.2  2003/05/16 14:59:53  dennis
 *  Added acknowlegement of NSF funding.
 *
 */
 
package DataSetTools.components.View.TwoD;

import javax.swing.*;
import java.awt.*;
import java.lang.*;
import java.awt.event.*;

import DataSetTools.components.View.Menu.ViewMenuItem;
import DataSetTools.components.View.Region.Region; 

/**
 * Any class that implements this interface will interpret and display
 * data in a graphical form. Examples include images, tables, and graphs.
 */
public interface IViewComponent2D
{
  /*
   * These variables are messaging strings for use by action listeners.
   */
   public static final String POINTED_AT_CHANGED = "POINTED_AT_CHANGED";
   public static final String SELECTED_CHANGED = "SELECTED_CHANGED";
   
  /**
   * This method is a notification to the view component that the selected
   * point has changed.
   */ 
   public void setPointedAt( Point pt );
   
  /**
   * This method is a gets the current point from the view component.
   */ 
   public Point getPointedAt();
  
  /**
   * Given an array of points, a selection overlay can be created.
   */ 
   public void setSelectedRegions( Region[] pts );
  
  /**
   * Retrieve array of regions generated by the selection overlay
   */
   public Region[] getSelectedRegions();
   
  /**
   * This method is invoked to notify the view component when the IVirtualArray
   * of data has changed. 
   */ 
   public void dataChanged();
   
  /**
   * Add a listener to this view component. A listener will be notified
   * when a selected point or region changes on the view component.
   */
   public void addActionListener( ActionListener act_listener );
   
  /**
   * Remove a specified listener from this view component.
   */ 
   public void removeActionListener( ActionListener act_listener );
  
  /**
   * Remove all listeners from this view component.
   */ 
   public void removeAllActionListeners();

  /**
   * Retrieve the jpanel that this component constructs.  
   */
   public JPanel getDisplayPanel();
  
  /**
   * Return controls needed by the component.
   */ 
   public JComponent[] getSharedControls();

  /**
   * Currently unused and unimplemented...
   */   
   public JComponent[] getPrivateControls();

  /**
   * Return view menu items needed by the component.
   */   
   public ViewMenuItem[] getSharedMenuItems();
   
  /**
   * Currently unused and unimplemented...
   */
   public ViewMenuItem[] getPrivateMenuItems();
   
}
